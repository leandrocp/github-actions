name: Test Rust project

on:
  workflow_call:
    inputs:
      rust-versions:
        type: string
        default: "[\"stable\", \"beta\", \"nightly\"]"
      apt-packages:
        type: string
        default: ""

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: ${{ fromJSON(inputs.rust-versions) }}
    steps:
    - name: Install apt packages
      if: inputs.apt-packages
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ inputs.apt-packages }}
    - name: Checkout code
      uses: actions/checkout@v5
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-registry-
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-git-
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-build-target-${{ matrix.rust }}-
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
