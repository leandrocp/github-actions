name: Elixir - Lint

on:
  workflow_call:
    inputs:
      elixirs:
        type: string
        default: "[\"1.19.x\"]"
      erlangs:
        type: string
        default: "[\"28.x\"]"
      setup-rust:
        type: boolean
        default: false

env:
  MIX_ENV: test

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp: ${{ fromJSON(inputs.erlangs) }}
        elixir: ${{ fromJSON(inputs.elixirs) }}
        exclude:
          - elixir: 1.16.x
            otp: 28.x
          - elixir: 1.17.x
            otp: 28.x
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Setup Rust
      if: inputs.setup-rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Cache Rust
      if: inputs.setup-rust
      uses: Swatinem/rust-cache@v2

    - name: Disable compile warnings
      run: echo "::remove-matcher owner=elixir-mixCompileWarning::"

    - name: Retrieve mix dependencies cache
      uses: actions/cache@v4
      id: mix-cache
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-

    - name: Install mix dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix deps.get
        mix deps.compile

    - name: Compile code
      run: mix compile --warnings-as-errors

    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused

    - name: Check formatting
      run: mix format --check-formatted
